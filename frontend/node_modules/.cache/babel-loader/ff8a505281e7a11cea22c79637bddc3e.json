{"ast":null,"code":"var _jsxFileName = \"/Users/kairucheng/kairu-playground/src/views/Weather/Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Weather.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(props) {\n  _s();\n\n  const cityRef = useRef();\n  const [cityWeather, setCityWeather] = useState();\n  const [cityTemp, setCityTemp] = useState(0); // Fetch weather data from API\n\n  const fetchWeather = async city => {\n    const url = `/api?q=${city}`;\n    const res = await fetch(url);\n    const data = await res.json();\n\n    if (data.cod === \"404\") {\n      alert(\"City not found\");\n      return;\n    }\n\n    if (data.cod === 401) {\n      alert(\"Invalid API Key\");\n      return;\n    }\n\n    setCityWeather(data.name);\n    setCityTemp(kelvinToFahrenheit(data.main.temp));\n  };\n\n  const kelvinToFahrenheit = temp => {\n    return Math.ceil((temp - 273.15) * 9 / 5 + 32);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (cityRef.value === \"\") {\n      alert(\"Please enter a city\");\n      return;\n    }\n\n    fetchWeather(cityRef.current.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather__container__result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"weather-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: cityRef,\n          type: \"text\",\n          id: \"city-input\",\n          placeholder: \"Enter a city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"9tZv/p6S+2hs+ygVcZq5jJFrwh4=\");\n\n_c = Weather;\nWeather.propTypes = {};\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/kairucheng/kairu-playground/src/views/Weather/Weather.jsx"],"names":["React","useRef","useState","PropTypes","Weather","props","cityRef","cityWeather","setCityWeather","cityTemp","setCityTemp","fetchWeather","city","url","res","fetch","data","json","cod","alert","name","kelvinToFahrenheit","main","temp","Math","ceil","handleSubmit","e","preventDefault","value","current","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,gBAAP;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAMC,OAAO,GAAGL,MAAM,EAAtB;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC,CAHsB,CAKtB;;AACA,QAAMS,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,UAAMC,GAAG,GAAI,UAASD,IAAK,EAA3B;AAEA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,UAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AAEA,QAAID,IAAI,CAACE,GAAL,KAAa,KAAjB,EAAwB;AACtBC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACD;;AAED,QAAIH,IAAI,CAACE,GAAL,KAAa,GAAjB,EAAsB;AACpBC,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACA;AACD;;AAEDX,IAAAA,cAAc,CAACQ,IAAI,CAACI,IAAN,CAAd;AACAV,IAAAA,WAAW,CAACW,kBAAkB,CAACL,IAAI,CAACM,IAAL,CAAUC,IAAX,CAAnB,CAAX;AACD,GAlBD;;AAoBA,QAAMF,kBAAkB,GAAIE,IAAD,IAAU;AACnC,WAAOC,IAAI,CAACC,IAAL,CAAW,CAACF,IAAI,GAAG,MAAR,IAAkB,CAAnB,GAAwB,CAAxB,GAA4B,EAAtC,CAAP;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAItB,OAAO,CAACuB,KAAR,KAAkB,EAAtB,EAA0B;AACxBV,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACD;;AAEDR,IAAAA,YAAY,CAACL,OAAO,CAACwB,OAAR,CAAgBD,KAAjB,CAAZ;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,QAAQ,EAAEH,YAAlC;AAAA,gCACE;AACE,UAAA,GAAG,EAAEpB,OADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,YAHL;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzDQF,O;;KAAAA,O;AA2DTA,OAAO,CAAC2B,SAAR,GAAoB,EAApB;AAEA,eAAe3B,OAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Weather.scss\";\n\nfunction Weather(props) {\n  const cityRef = useRef();\n  const [cityWeather, setCityWeather] = useState();\n  const [cityTemp, setCityTemp] = useState(0);\n\n  // Fetch weather data from API\n  const fetchWeather = async (city) => {\n    const url = `/api?q=${city}`;\n\n    const res = await fetch(url);\n    const data = await res.json();\n\n    if (data.cod === \"404\") {\n      alert(\"City not found\");\n      return;\n    }\n\n    if (data.cod === 401) {\n      alert(\"Invalid API Key\");\n      return;\n    }\n\n    setCityWeather(data.name);\n    setCityTemp(kelvinToFahrenheit(data.main.temp));\n  };\n\n  const kelvinToFahrenheit = (temp) => {\n    return Math.ceil(((temp - 273.15) * 9) / 5 + 32);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (cityRef.value === \"\") {\n      alert(\"Please enter a city\");\n      return;\n    }\n\n    fetchWeather(cityRef.current.value);\n  };\n\n  return (\n    <div className=\"weather\">\n      <div className=\"weather__container\">\n        <div className=\"weather__container__result\"></div>\n        <form id=\"weather-form\" onSubmit={handleSubmit}>\n          <input\n            ref={cityRef}\n            type=\"text\"\n            id=\"city-input\"\n            placeholder=\"Enter a city\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nWeather.propTypes = {};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}